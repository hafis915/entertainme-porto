[{"/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/index.js":"1","/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/App.js":"2","/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/reportWebVitals.js":"3","/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/config/graphql.js":"4","/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/pages/mainPage.js":"5","/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/components/navbar.js":"6","/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/components/card.js":"7","/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/pages/moviePage.js":"8","/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/pages/seriesPage.js":"9","/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/pages/addMovie.js":"10","/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/pages/detail.js":"11","/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/pages/editForm.js":"12","/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/cache/index.js":"13","/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/config/query.js":"14","/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/pages/favorite.js":"15","/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/pages/editFormSeries.js":"16"},{"size":500,"mtime":1610993115451,"results":"17","hashOfConfig":"18"},{"size":1647,"mtime":1611129087592,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1610993115451,"results":"20","hashOfConfig":"18"},{"size":511,"mtime":1611068322279,"results":"21","hashOfConfig":"18"},{"size":1054,"mtime":1611131021292,"results":"22","hashOfConfig":"18"},{"size":770,"mtime":1611072639428,"results":"23","hashOfConfig":"18"},{"size":584,"mtime":1611105987597,"results":"24","hashOfConfig":"18"},{"size":1036,"mtime":1611115107649,"results":"25","hashOfConfig":"18"},{"size":1061,"mtime":1611115134512,"results":"26","hashOfConfig":"18"},{"size":3108,"mtime":1611133179851,"results":"27","hashOfConfig":"18"},{"size":3691,"mtime":1611132625293,"results":"28","hashOfConfig":"18"},{"size":3837,"mtime":1611132812455,"results":"29","hashOfConfig":"18"},{"size":80,"mtime":1611072793851,"results":"30","hashOfConfig":"18"},{"size":1949,"mtime":1611132415335,"results":"31","hashOfConfig":"18"},{"size":631,"mtime":1611128657267,"results":"32","hashOfConfig":"18"},{"size":3925,"mtime":1611133127343,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"ombb5",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},"/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/index.js",[],["74","75"],"/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/App.js",[],"/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/reportWebVitals.js",[],"/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/config/graphql.js",[],"/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/pages/mainPage.js",[],"/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/components/navbar.js",[],"/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/components/card.js",[],"/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/pages/moviePage.js",["76"],"import React, {useEffect} from \"react\"\nimport { useHistory } from \"react-router-dom\";\nimport Card from \"../components/card\"\nimport { GET_MOVIES } from \"../config/query\"\nimport { useQuery } from \"@apollo/client\";\n\n\nexport default function Movie() {\n    const {loading,error,data: movies,refetch} = useQuery(GET_MOVIES)\n    const history = useHistory()\n\n    useEffect(() => {\n        refetch()\n    }, [])\n    if (loading)  return <h1>Loading...</h1>\n    if (error) return <h1>{JSON.stringify(error)}</h1>\n\n    return(\n        <>\n        <div className=\"main-content\">\n            <div className=\"add-movie-button\">\n                <button \n                onClick = {() => {history.push(\"/addMovie/movie\")}}\n                > Add Movies</button>\n            </div>\n            {movies.movies.map ( movie =>  {\n                return (\n                <Card \n                movie = {movie} \n                key = {movie._id}\n                refetch = {refetch}\n                ></Card>)\n            })}\n         </div>\n        </>\n    )\n}","/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/pages/seriesPage.js",["77"],"import React, {useEffect} from \"react\"\nimport { useHistory } from \"react-router-dom\";\nimport Card from \"../components/card\"\nimport { GET_SERIES } from \"../config/query\"\nimport { useQuery } from \"@apollo/client\";\n\nexport default function Series () {\n    const {loading, error, data: series, refetch} = useQuery(GET_SERIES)\n    const history = useHistory()\n\n    useEffect(() => {\n        refetch()\n    }, [])\n    if (loading)  return <h1>Loading...</h1>\n    if (error) return <h1>{JSON.stringify(error)}</h1>\n    \n    return (\n        <>\n                    <div className=\"main-content\">\n            <div className=\"add-movie-button\">\n                <button \n                onClick = {() => {history.push(\"/addMovie/series\")}}\n                > Add Series</button>\n            </div>\n            {series.series.map ( serial =>  {\n                return (\n                <Card \n                movie = {serial} \n                key = {serial._id}\n                refetch = {refetch}\n                ></Card>)\n            })}\n         </div>\n        </>\n    )\n}","/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/pages/addMovie.js",["78","79"],"import React, {useState} from \"react\"\nimport {gql ,useMutation} from \"@apollo/client\"\nimport { useHistory,useParams } from \"react-router-dom\"\nimport { ADD_MOVIE , ADD_SERIES} from \"../config/query\"\nimport { TagInput } from \"reactjs-tag-input\"\n\nexport default function AddMovie() {\n    const {kind} = useParams()\n    const [inputUser, setInputUser] = useState({\n        title : \"\",\n        overview : \"\",\n        poster_path : \"\",\n        popularity : 0,\n        tags : []\n    })\n    console.log(kind)\n    const [addMovie] = useMutation(ADD_MOVIE)\n    const [addSeries] = useMutation(ADD_SERIES)\n    const history = useHistory()\n    \n    function handleSubmitForm(e) {\n        e.preventDefault()\n        inputUser.tags = inputUser.tags.split(\",\")\n        console.log(inputUser)\n        if(kind === \"movie\") {\n            addMovie({\n                variables: {\n                    movie: inputUser\n                }\n            })\n            history.push(\"/movie\")\n        }else {\n            addSeries({\n                variables: {\n                    series: inputUser\n                }\n            })\n            history.push(\"/series\")\n        }\n\n        \n    }\n\n    function handleChange(e) {\n        setInputUser({\n            ...inputUser,\n            [e.target.name] : e.target.value\n        })\n        console.log(inputUser)\n    }\n\n    return (\n    <form onSubmit = {handleSubmitForm}>\n\n\n    <div className=\"mb-3\">\n        <label className=\"form-label\">Title</label>\n        <input\n        onChange = {handleChange} \n        type=\"text\" \n        name= \"title\"\n        value = {inputUser.name}\n        className=\"form-control\" \n        aria-describedby=\"emailHelp\" \n        />\n    </div>\n\n    <div className=\"mb-3\">\n        <label className=\"form-label\">overview</label>\n        <input\n        onChange = {handleChange} \n        value = {inputUser.name}\n\n        type=\"text\" \n        className=\"form-control\" \n        name = \"overview\"\n        aria-describedby=\"emailHelp\" \n        />\n    </div>\n\n    <div className=\"mb-3\">\n        <label  className=\"form-label\">Poster Path</label>\n        <input\n        onChange = {handleChange} \n        value = {inputUser.name}\n\n        type=\"text\" \n        name = \"poster_path\"\n        className=\"form-control\" \n        aria-describedby=\"emailHelp\" \n        />\n    </div>\n\n    <div className=\"mb-3\">\n        <label className=\"form-label\">Popularity</label>\n        <input\n        onChange = {handleChange} \n        value = {inputUser.name}\n\n        type=\"number\"\n        step = \"0.1\"\n        className=\"form-control\" \n        name = \"popularity\"\n        aria-describedby=\"emailHelp\" \n        placeholder = \"0.2\"\n        />\n    </div>\n\n    <div className=\"mb-3\">\n        <label className=\"form-label\">Tags</label>\n        <input\n        onChange = {handleChange} \n        value = {inputUser.name}\n        type=\"text\"\n        className=\"form-control\" \n        name = \"tags\"\n        placeholder=\"add minimu 2 tags seperated by coma. exp: tags1,tags2\"\n        />\n    </div>\n\n    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n    </form>\n    )\n}","/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/pages/detail.js",["80"],"import \"./Page.css\"\nimport React, {useState} from \"react\"\nimport { useParams, useHistory } from \"react-router-dom\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { GET_MOVIE_BY_ID, DELETE_MOVIE , GET_SERIES_BY_ID, DELETE_SERIES} from \"../config/query\"\n\nimport { favoriteVar } from \"../cache\"\n\n\nexport default function Detail() {\n    const { movieId } = useParams()\n    const history = useHistory()\n\n    const {loading :movieLoading, error:movieError, data : movie,refetch} = useQuery(GET_MOVIE_BY_ID, {variables : {id : movieId}})\n    const {loading :seriesLoading,error:seriesError, data: series} = useQuery(GET_SERIES_BY_ID, {variables : {id : movieId}})\n\n    const [isFav, setIsFav] = useState(false)\n    const [deleteMovie]  = useMutation(DELETE_MOVIE)\n    const [deleteSeries]  = useMutation(DELETE_SERIES)\n\n    if(movieLoading || seriesLoading) return <h1>Loading...</h1>\n    if(movieError || seriesError) return <h2>ERROR</h2>\n    let data\n\n    if(movie.movie) {\n        data = movie.movie\n    }else {\n        data = series.serial\n    }\n    \n    function handleAddFav(params) {\n        setIsFav(true)\n        console.log(favoriteVar().length, \"before\")\n        if(!favoriteVar().length) {\n            favoriteVar([data])\n        }else {\n            let prevData = [...favoriteVar()]\n            prevData = prevData.concat([data])\n            favoriteVar(prevData)\n        }\n    }\n\n    function handleEditButton(id) {\n        if(movie.movie) {\n            history.push(`/movie/edit/${id}`)\n        }else {\n            history.push(`/series/edit/${id}`)\n\n        }\n    }\n\n    function handleDeleteData(id) {\n        console.log(id)\n        if(movie.movie) {\n            console.log(\"MASUK SINI\")\n            deleteMovie({\n                variables: { \n                    id: id\n                },\n                onCompleted : (data => {\n                    console.log(data)\n                })\n            })\n            history.push(\"/movie\")\n        }else {\n            deleteSeries({\n                variables: {\n                    id: id\n                }\n            })\n            history.push(\"/series\")\n        }\n\n    }\n    return(\n        <>\n        <div className=\"detail-container shadow p-3 mb-5 bg-white rounded\">\n            <img src={data.poster_path} alt=\"poster_path\"/>\n            <div className=\"info\">\n                <div className=\"title shadow-sm p-3 mb-5 bg-white rounded\">\n                    <h2>{data.title} </h2>\n                        <ul>\n\n                        {data.tags.map( tag => {\n                            return <li>{tag}</li>\n                        })}\n                        </ul>\n                    \n                </div>\n                <div className=\"detail-info \">\n                    <div className=\"information-detail\">\n                        <h5>Overview : {data.overview}</h5>\n                        <h5>Popularity : {data.popularity}</h5>\n                    </div>\n                    <div className=\"button-detail\">\n                        {!isFav && \n                        <button\n                        onClick= {handleAddFav}\n                        >add to favorite</button>\n                        }\n\n                        <button \n                        className=\"btn btn-primary\"\n                        onClick= {() => {handleEditButton(data._id)}}\n                        > Edit</button>\n\n\n\n                        <button \n                        className=\"btn btn-danger\"\n                        onClick ={() => handleDeleteData(data._id)}\n                        > delete</button>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n        </>\n    )\n}","/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/pages/editForm.js",["81"],"import React , {useState, useEffect} from \"react\"\nimport {gql, useMutation, useQuery} from \"@apollo/client\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport { GET_MOVIE_BY_ID , EDIT_MOVIE} from \"../config/query\"\n\n\nexport default function EditForm() {\n    const { movieId } = useParams()\n    const history = useHistory()\n    const {loading, error, data : movie} = useQuery(GET_MOVIE_BY_ID, {variables : {id : movieId}})\n    const [inputUser, setInputUser] = useState({\n        title :  \"\",\n        overview : \"\",\n        poster_path : \"\",\n        popularity : 0,\n        tags : []\n    })\n    const [editMovie] = useMutation(EDIT_MOVIE)\n\n    useEffect(() => {\n        console.log(movie)\n        console.log(\"use effect\")\n        if(movie) {\n            setInputUser({\n                title : movie.movie.title,\n                overview : movie.movie.overview,\n                poster_path : movie.movie.poster_path,\n                popularity : movie.movie.popularity,\n                tags: movie.movie.tags\n            })\n        }\n    }, [movie])\n\n    function handleSubmitForm(e) {\n        e.preventDefault()\n        inputUser.tags = inputUser.tags.split(\",\")\n        console.log(inputUser)\n        console.log(movieId)\n        editMovie({\n            variables:{\n                id: movieId,\n                editedData : inputUser\n            }\n        })\n        history.push(\"/movie\")\n    }\n\n    function handleChange(e) {\n        setInputUser({\n            ...inputUser,\n            [e.target.name] : e.target.value\n        })\n        // console.log(inputUser)\n    }\n\n    if(loading) return <h1>loading...</h1>\n    if(error) return <h1>Error</h1>\n\n    return(\n        <form onSubmit = {handleSubmitForm}>\n            <div className=\"mb-3\">\n                <label className=\"form-label\">Title</label>\n                <input\n                onChange = {handleChange} \n                type=\"text\" \n                name= \"title\"\n                value = {inputUser.title}\n                className=\"form-control\" \n                aria-describedby=\"emailHelp\" \n                />\n            </div>\n\n            <div className=\"mb-3\">\n                <label className=\"form-label\">overview</label>\n                <input\n                onChange = {handleChange} \n                value = {inputUser.overview}\n\n                type=\"text\" \n                className=\"form-control\" \n                name = \"overview\"\n                aria-describedby=\"emailHelp\" \n                />\n            </div>\n\n            <div className=\"mb-3\">\n                <label  className=\"form-label\">Poster Path</label>\n                <input\n                type=\"text\" \n                name = \"poster_path\"\n                onChange = {handleChange} \n                value = {inputUser.poster_path}\n                className=\"form-control\" \n                aria-describedby=\"emailHelp\" \n                />\n            </div>\n\n            <div className=\"mb-3\">\n                <label className=\"form-label\">Popularity</label>\n                <input\n                name = \"popularity\"\n                onChange = {handleChange} \n                value = {inputUser.popularity}\n                type=\"number\"\n                step = \"0.1\"\n                className=\"form-control\" \n                aria-describedby=\"emailHelp\" \n                placeholder = \"0.2\"\n                />\n            </div>\n\n            <div className=\"mb-3\">\n                <label className=\"form-label\">Tags</label>\n                <input\n                onChange = {handleChange} \n                value = {`${inputUser.tags}`}\n                type=\"text\"\n                className=\"form-control\" \n                name = \"tags\"\n                />\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n    </form>\n\n\n    )\n}","/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/cache/index.js",[],["82","83"],"/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/config/query.js",[],"/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/pages/favorite.js",[],"/home/hafis/Documents/h8/p3/week-2/mongoDB-tugas/entertainme/client/src/pages/editFormSeries.js",["84","85"],"import React , {useState, useEffect} from \"react\"\nimport {gql, useMutation, useQuery} from \"@apollo/client\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport { GET_SERIES_BY_ID, EDIT_MOVIE, EDIT_SERIES} from \"../config/query\"\n\n\nexport default function EditForm() {\n    const { movieId } = useParams()\n    const history = useHistory()\n\n    const {loading, error, data : movie} = useQuery(GET_SERIES_BY_ID, {variables : {id : movieId}})\n    const [inputUser, setInputUser] = useState({\n        title :  \"\",\n        overview : \"\",\n        poster_path : \"\",\n        popularity : 0,\n        tags : []\n    })\n    const [editSeries] = useMutation(EDIT_SERIES)\n\n    useEffect(() => {\n        console.log(movie)\n        console.log(\"use effect\")\n        if(movie) {\n            console.log(movie)\n            setInputUser({\n                title : movie.serial.title,\n                overview : movie.serial.overview,\n                poster_path : movie.serial.poster_path,\n                popularity : movie.serial.popularity,\n                tags : movie.serial.tags\n            })\n        }\n    }, [movie])\n\n    function handleSubmitForm(e) {\n        e.preventDefault()\n        inputUser.tags = inputUser.tags.split(\",\")\n        console.log(inputUser)\n        console.log(movieId)\n        editSeries({\n            variables:{\n                id: movieId,\n                editedData : inputUser\n            }\n        })\n        history.push(\"/series\")\n    }\n\n    function handleChange(e) {\n        setInputUser({\n            ...inputUser,\n            [e.target.name] : e.target.value\n        })\n        // console.log(inputUser)\n    }\n\n    if(loading) return <h1>loading...</h1>\n    if(error) return <h1>Error</h1>\n\n    return(\n        <form onSubmit = {handleSubmitForm}>\n            <h1>EDIT SERIES</h1>\n            <div className=\"mb-3\">\n                <label className=\"form-label\">Title</label>\n                <input\n                onChange = {handleChange} \n                type=\"text\" \n                name= \"title\"\n                value = {inputUser.title}\n                className=\"form-control\" \n                aria-describedby=\"emailHelp\" \n                />\n            </div>\n\n            <div className=\"mb-3\">\n                <label className=\"form-label\">overview</label>\n                <input\n                onChange = {handleChange} \n                value = {inputUser.overview}\n\n                type=\"text\" \n                className=\"form-control\" \n                name = \"overview\"\n                aria-describedby=\"emailHelp\" \n                />\n            </div>\n\n            <div className=\"mb-3\">\n                <label  className=\"form-label\">Poster Path</label>\n                <input\n                type=\"text\" \n                name = \"poster_path\"\n                onChange = {handleChange} \n                value = {inputUser.poster_path}\n                className=\"form-control\" \n                aria-describedby=\"emailHelp\" \n                />\n            </div>\n\n            <div className=\"mb-3\">\n                <label className=\"form-label\">Popularity</label>\n                <input\n                name = \"popularity\"\n                onChange = {handleChange} \n                value = {inputUser.popularity}\n                type=\"number\"\n                step = \"0.1\"\n                className=\"form-control\" \n                aria-describedby=\"emailHelp\" \n                placeholder = \"0.2\"\n                />\n            </div>\n\n            <div className=\"mb-3\">\n                <label className=\"form-label\">Tags</label>\n                <input\n                onChange = {handleChange} \n                value = {`${inputUser.tags}`}\n                type=\"text\"\n                className=\"form-control\" \n                name = \"tags\"\n                />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n    </form>\n\n\n    )\n}",{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":14,"column":8,"nodeType":"92","endLine":14,"endColumn":10,"suggestions":"93"},{"ruleId":"90","severity":1,"message":"91","line":13,"column":8,"nodeType":"92","endLine":13,"endColumn":10,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":2,"column":9,"nodeType":"97","messageId":"98","endLine":2,"endColumn":12},{"ruleId":"95","severity":1,"message":"99","line":5,"column":10,"nodeType":"97","messageId":"98","endLine":5,"endColumn":18},{"ruleId":"95","severity":1,"message":"100","line":14,"column":66,"nodeType":"97","messageId":"98","endLine":14,"endColumn":73},{"ruleId":"95","severity":1,"message":"96","line":2,"column":9,"nodeType":"97","messageId":"98","endLine":2,"endColumn":12},{"ruleId":"86","replacedBy":"101"},{"ruleId":"88","replacedBy":"102"},{"ruleId":"95","severity":1,"message":"96","line":2,"column":9,"nodeType":"97","messageId":"98","endLine":2,"endColumn":12},{"ruleId":"95","severity":1,"message":"103","line":4,"column":28,"nodeType":"97","messageId":"98","endLine":4,"endColumn":38},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.","ArrayExpression",["106"],["107"],"no-unused-vars","'gql' is defined but never used.","Identifier","unusedVar","'TagInput' is defined but never used.","'refetch' is assigned a value but never used.",["104"],["105"],"'EDIT_MOVIE' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"108","fix":"110"},"Update the dependencies array to be: [refetch]",{"range":"111","text":"112"},{"range":"113","text":"112"},[399,401],"[refetch]",[403,405]]